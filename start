#!/bin/bash

set -o nounset -o pipefail -o errexit

SCRIPT=$(readlink -f "$0")
SCRIPT_DIR=$(dirname "$SCRIPT")

SESSION=${SESSION-stream}
ACTION=${1-start}
CHANNEL=${CHANNEL-${2-rootmos2}}

if [ "$ACTION" = "start" ]; then
    tmux new-session -A -s "$SESSION" -n setup "$0" setup
elif [ "$ACTION" = "setup" ]; then
    tmux new-window -n "restreamer" "$SCRIPT_DIR/restreamer"
    tmux new-window -n "limbo" "$SCRIPT_DIR/mpv/limbo"
    tmux new-window -n "obs" "$0" obs
    tmux new-window -n "monitor" "$0" monitor "$CHANNEL"
    tmux new-window -n "chat" "$0" chat-monitor
    tmux split-window -v -t "chat" "$0" chat-prompt
    trap 'tmux kill-session -t "$SESSION"' EXIT
    echo -n "done"
    while sleep 1; do
        echo -n "."
    done
elif [ "$ACTION" = "obs" ]; then
    trap 'tmux kill-session -t "$SESSION"' EXIT
    obs
elif [ "$ACTION" = "chat-monitor" ]; then
    echo "joining: $CHANNEL"
    twitch-cli --chat "$CHANNEL" || true
    while sleep 5; do
        echo "reconnecting: $CHANNEL"
        twitch-cli --chat "$CHANNEL" || true
    done
elif [ "$ACTION" = "chat-prompt" ]; then
    socat readline unix:"$HOME/.twitch-cli/channel/$CHANNEL" || true
    while sleep 5; do
        clear
        socat readline unix:"$HOME/.twitch-cli/channel/$CHANNEL" || true
    done
elif [ "$ACTION" = "monitor" ]; then
    URL="https://twitch.tv/$CHANNEL"

    while true; do
        echo "monitoring: $URL"
        $PLAYER --mute "$URL" || true

        echo
        echo -n "sleeping"
        for i in $(seq 5); do
            echo -n "."
            sleep 1
        done
        clear
    done
fi
